<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.7">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-07-25T21:37:38-04:00</updated><id>http://localhost:4000/feed.xml</id><subtitle>&quot;Electronics, Microcontrollers, FPGAs, Embedded, Linux, Software, horrible projects that deserve to be thrown into oblivion. Just your everyday idiot who enjoys taking things apart, and maybe someday I'll learn how to put them back together&quot;</subtitle><entry><title type="html">Starting with Raspberry Pi</title><link href="http://localhost:4000/tutorials/starting_with_raspberry_pi.html" rel="alternate" type="text/html" title="Starting with Raspberry Pi" /><published>2021-07-24T22:41:46-04:00</published><updated>2021-07-24T22:41:46-04:00</updated><id>http://localhost:4000/tutorials/starting_with_raspberry_pi</id><content type="html" xml:base="http://localhost:4000/tutorials/starting_with_raspberry_pi.html">&lt;hr /&gt;

&lt;h1 id=&quot;requirements&quot;&gt;Requirements&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Basic knowledge of &lt;a href=&quot;https://linuxjourney.com/&quot;&gt;Linux&lt;/a&gt; (It’s possible to connect via windows but this tutorial assumes you’re working in a Linux environment)&lt;/li&gt;
  &lt;li&gt;Compatible &lt;a href=&quot;https://www.raspberrypi.org/products/&quot;&gt;Raspberry Pi&lt;/a&gt; Model (Most will work. This was tested with the Pi Zero, Pi Zero W, and the Pi 3)&lt;/li&gt;
  &lt;li&gt;MicroSD Card and method to program it&lt;/li&gt;
  &lt;li&gt;Cables/Power Supply for your Pi (USB for the Zero, Power Cable for all other models)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;starting-out&quot;&gt;Starting Out&lt;/h1&gt;

&lt;p&gt;This tutorial assumes you are working on a Linux machine. I highly encourage you dual-boot your machine if you ever intend to do any serious work in electronics. You’ll find that you pretty much need to have both Windows and Linux if you want to take advantage of all the modern tools. If you’re new I reccomend just going with &lt;a href=&quot;https://ubuntu.com/download/desktop&quot;&gt;Ubuntu&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Raspberry Pi that you purchased will be running Raspbian. This is a stripped down version of the Debian Linux distrobution(Ubuntu is based upon Debian as well). There are two versions of Raspian, Raspian Desktop, and Raspian Lite.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Raspian Desktop - Full Desktop Environment capable of running a monitor and doing things like browse the web and playing video.&lt;/li&gt;
  &lt;li&gt;Raspian Lite - Terminal only distrobution that doesn’t have bloat. This runs significantly faster and if you don’t need a monitor, this is what your system should use.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;installing-raspian&quot;&gt;Installing Raspian&lt;/h1&gt;
&lt;p&gt;There is a very simple tool for installing the Raspian image onto the SD card. Do the following command in your Linux terminal to install the package&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;snap &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;rpi-imager &lt;span class=&quot;nt&quot;&gt;--devmode&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# When that is done installing do the following command to launch the gui&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;rpi-imager
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ensure that you’re SD card is connected to your machine and go through the setup for your image.&lt;/p&gt;

&lt;p&gt;Chose OS -&amp;gt; Raspberry Pi OS(Other) -&amp;gt; Raspberry Pi OS (Lite)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/tutorials/starting_with_raspberry_pi/rpi_imager.png&quot; alt=&quot;RPI Imager&quot; width=&quot;700&quot; /&gt;
If you would like to install the full desktop suite opt for Raspberry Pi OS Full, but that is not the point of this tutorial. After your SD card is installed fully remove it and reinsert it into your computer. Two partitions should now appear in your system, Boot and RootFS. For our purposes we will only be touching the Boot partition.&lt;/p&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;configuring-the-os&quot;&gt;Configuring the OS&lt;/h1&gt;
&lt;p&gt;All Pi’s will need the following steps to set them up.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;PATHTOBOOT/Boot

&lt;span class=&quot;c&quot;&gt;#This file enables ssh on the system&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;touch &lt;/span&gt;ssh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After that we need to do some configuration if your Pi has Wi-Fi. The only Pi I know that does not have Wi-Fi is the Pi Zero.
You’ll need to create the following file within the Boot partition and name it wpa_supplicant.conf&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=US

network={
    ssid=&quot;YOURSSID&quot;
    psk=&quot;YOURPASSWORD&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Wherein the ssid is the name of your Wi-Fi network, and psk is your password. The Quotes remain around the string. For me personally I had to add the following line due to how my Wi-Fi network handles its keys.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;network={
    ssid=&quot;YOURSSID&quot;
    psk=&quot;YOURPASSWORD&quot;
    key_mgmt=WPA-PSK
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/tutorials/starting_with_raspberry_pi/boot_partition.png&quot; alt=&quot;Boot Paritition Setup&quot; width=&quot;700&quot; /&gt;&lt;/p&gt;
&lt;h1 id=&quot;todo-add-the-info-for-the-pi-zero-with-no-wi-fi&quot;&gt;TODO add the info for the Pi Zero with no Wi-Fi&lt;/h1&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;connecting-to-your-pi&quot;&gt;Connecting to Your Pi&lt;/h1&gt;
&lt;p&gt;Now that your pi is fully configured we’re going to connect to it via SSH. SSH is a method of logging into a different computer remotely. It’s extremely useful, and you’ll use it when logging into other computers on your network, or even when logging into remote servers that you may be using.&lt;/p&gt;

&lt;p&gt;This assumes you’re on the same Wi-Fi network as your Pi, or in the case of the Pi Zero (without Wi-Fi) that you’re connected to your computer via the USB Data Port.&lt;/p&gt;

&lt;p&gt;The Pi will take a minute or two to boot up and be accessible so after plugging it in give it a bit.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# If this shows that it is successfully receiving packets move forward with the next command&lt;/span&gt;
ping raspberrypi.local

&lt;span class=&quot;c&quot;&gt;# This should allow you to login if you could ping successfully&lt;/span&gt;
ssh pi@raspberrypi.local
&lt;span class=&quot;c&quot;&gt;# The password by default is raspberry&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If this works successfully then you’ve successfully logged into your pi :)&lt;/p&gt;

&lt;p&gt;If this does not work we’re going to have to look for the IP ourselves. We’re going to need a tool called nmap.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;nmap

&lt;span class=&quot;c&quot;&gt;#This gets your IP address&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;hostname&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-I&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#Take the IP address that was outputted in the start by that and paste it in the place of the IP in&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#the following command&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-sn&lt;/span&gt; 192.168.0.0/24
&lt;span class=&quot;c&quot;&gt;#sudo is required to see the manufacturer of each device on your network&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Nmap will have a long list of devices on your network, and you should see one that has the Raspberry Pi Foundation as its creator. Take that IP address and run the following command.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#Replace the IP address here with the IP you found for your Pi&lt;/span&gt;
ssh pi@192.168.0.13
&lt;span class=&quot;c&quot;&gt;#The default password is raspberry&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/posts/tutorials/starting_with_raspberry_pi/ssh_success.png&quot; alt=&quot;SSH Success&quot; width=&quot;700&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;after-logging-in&quot;&gt;After Logging In&lt;/h1&gt;
&lt;p&gt;Now that you’re in lets configure a few things. Run the following command on your shell that is now logged into the pi.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# This will open up an ncurses GUI to configure the Pi&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;raspi-config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Inside the GUI we’re going to make a few changes&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;System Options -&amp;gt; Password -&amp;gt; Configure a new password for the pi user&lt;/li&gt;
  &lt;li&gt;System Options -&amp;gt; Hostname -&amp;gt; Configure a new hostname for your pi (this was previously raspberrypi)&lt;/li&gt;
  &lt;li&gt;Localisation Options -&amp;gt; Customize all of these, so they suit your locale and keyboard type&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/tutorials/starting_with_raspberry_pi/raspi_conf.png&quot; alt=&quot;Raspi-Conf&quot; width=&quot;700&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now that you set up the new hostname and password your next ssh session will require you to do&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh pi@newhostname
&lt;span class=&quot;c&quot;&gt;#Password is whatever you set it to&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;conclussion&quot;&gt;Conclussion&lt;/h1&gt;
&lt;p&gt;With all of that wrapped up and the configuration complete we’re all done :)
Congrats on setting up your Pi to work headless!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/tutorials/starting_with_raspberry_pi/pi_zero_w_picture.jpg&quot; alt=&quot;My Pi Zero W&quot; width=&quot;700&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There’s one final tip I’ll leave you with, you should shutdown your Pi using the terminal rather than just unplugging it. This helps to prevent data corruption.&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#This command will shut down the pi&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;shutdown now
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><category term="tutorials" /><summary type="html"></summary></entry><entry><title type="html">Contribution Guide</title><link href="http://localhost:4000/tutorials/contribution_guide.html" rel="alternate" type="text/html" title="Contribution Guide" /><published>2021-04-22T22:41:46-04:00</published><updated>2021-04-22T22:41:46-04:00</updated><id>http://localhost:4000/tutorials/contribution_guide</id><content type="html" xml:base="http://localhost:4000/tutorials/contribution_guide.html">&lt;hr /&gt;
&lt;h1 id=&quot;overview&quot;&gt;Overview&lt;/h1&gt;

&lt;hr /&gt;
&lt;p&gt;This site is based on GitHub Pages and Jekyll. You can use these to host a static site without ever touching html or css. Your posts are written in markdown(cheatsheet). Markdown is very simple to write basic posts in, and Jekyll handles the parsing of these files and creates a standard html and css based site for you.&lt;/p&gt;

&lt;p&gt;Jekyll is fairly simple to use once you have it set up. You’ll need a few things to get going.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Linux (For Example: Ubuntu)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ruby-lang.org/en/documentation/installation/&quot;&gt;Ruby&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://bundler.io/&quot;&gt;Bundler&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you don’t know how to use Linux here’s a &lt;a href=&quot;https://linuxjourney.com/&quot;&gt;great site&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you don’t know git here’s a basic &lt;a href=&quot;https://git-scm.com/docs/gittutorial&quot;&gt;guide&lt;/a&gt;. I didn’t vet this thoroughly, but it
looks decent enough.&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;To download the project simply run:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/UML-Embedded/uml-embedded.github.io.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;project-structure&quot;&gt;Project Structure&lt;/h1&gt;

&lt;hr /&gt;
&lt;p&gt;This tree shows you how the project is structured.&lt;/p&gt;

&lt;p&gt;uml-embedded&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;index.md&lt;/li&gt;
  &lt;li&gt;tutorials.md&lt;/li&gt;
  &lt;li&gt;blog.md&lt;/li&gt;
  &lt;li&gt;about.md&lt;/li&gt;
  &lt;li&gt;404.html&lt;/li&gt;
  &lt;li&gt;assets
    &lt;ul&gt;
      &lt;li&gt;images&lt;/li&gt;
      &lt;li&gt;posts
        &lt;ul&gt;
          &lt;li&gt;tutorials
            &lt;ul&gt;
              &lt;li&gt;tutorial_template
                &lt;ul&gt;
                  &lt;li&gt;tutorial_template_asset1.png&lt;/li&gt;
                  &lt;li&gt;tutorial_template_asset2.png&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;blogs&lt;/li&gt;
          &lt;li&gt;projects&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;_posts
    &lt;ul&gt;
      &lt;li&gt;2021-01-1-tutorial_template.md&lt;/li&gt;
      &lt;li&gt;2021-02-1-blog_template.md&lt;/li&gt;
      &lt;li&gt;2021-03-1-project_template.md&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;p&gt;This is a pretty rough outline of the structure. Unless your editing one of the main tabs you only really need to focus on the posts, and assets folders. The assets folder will hold the images you need to include in your post. Sort it under the appropriate category(for example, tutorials) and label it as you see fit within that folder.&lt;/p&gt;

&lt;p&gt;Your post will go under the post folder will contain your post. The title of the post must follow the format shown. The date must be accurate, and you must use dashes as shown until you reach the post name. Within the post name please use underscores to separate words.&lt;/p&gt;

&lt;p&gt;As long as you fill out the header information for the post properly, Jekyll will autogenerate everything for you. Here is an example post for the tutorial template post shown above&lt;/p&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;example-post&quot;&gt;Example Post&lt;/h1&gt;

&lt;hr /&gt;
&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;post&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Tutorial&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Template&quot;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;post-title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Tutorial&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Template&quot;&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;s&quot;&gt;2021-01-01 21:41:46 -0500&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;permalink&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/tutorials/tutorial_template.html&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;permalink_name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/tutorial_template&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;detail_image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/assets/images/posts/tutorials/tutorial_template/tutorial_template_asset2.png&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;tutorials&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Template&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;tutorials&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;:)&quot;&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Tutorials&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;---
&lt;/span&gt;
&lt;span class=&quot;gh&quot;&gt;# Body of your post goes here :)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; Write all your stuff and things!
&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; Here!
&lt;span class=&quot;p&quot;&gt;![&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Images too!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;/assets/images/tutorial_template/tutorial_template_asset1.png&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

Markdown can have embedded html too!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;hr /&gt;
&lt;h1 id=&quot;going-through-the-example&quot;&gt;Going through the example&lt;/h1&gt;

&lt;hr /&gt;
&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;layout: post
title:  &quot;Tutorial Template&quot;
post-title:  &quot;Tutorial Template&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The layout will always be post. Do not change this unless you know what you’re doing.&lt;/p&gt;

&lt;p&gt;The title is whatever you would like to call your post, and your post title will need to be the same.&lt;/p&gt;

&lt;hr /&gt;
&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;date:   2021-01-01 21:41:46 -0500
permalink: /tutorials/tutorial_template.html
permalink_name: /tutorial_template
detail_image: /assets/images/posts/tutorials/tutorial_template/tutorial_template_asset2.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The date must be accurate to when you write the post. If the date and time occurs in the future the post will not be generated by Jekyll until that time occurs. The permalink should go /category/post_title.html&lt;/p&gt;

&lt;p&gt;Categories&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;tutorials&lt;/li&gt;
  &lt;li&gt;blogs&lt;/li&gt;
  &lt;li&gt;projects&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Post title will be the title you previously chose in lower case letters, seperated by underscores rather than spaces.&lt;/p&gt;

&lt;p&gt;The detail image will be pasted into the header page for each section. (ie: the tutorial page has a small clip of the image) and the post put the detail image at the top of the post itself. If you do not want a detail image simply delete the line.&lt;/p&gt;

&lt;hr /&gt;
&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;category: tutorials
description: &quot;Template for tutorials :)&quot;

&lt;span class=&quot;gh&quot;&gt;categories: tutorials
---
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;
---
&lt;/span&gt;
&lt;span class=&quot;gh&quot;&gt;# Body of your post goes here :)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Category is the respective category of your post. The same categories as listed above.&lt;/p&gt;

&lt;p&gt;The first set of dashes closes of the header that jekyll uses, and the second set is a simple markdown horizontal rule. I like the look of it so keep it around please.&lt;/p&gt;

&lt;p&gt;Everything after this goes into the body of your post. You can write anything you want in markdown or html, and it will be generated by Jekyll into the main site.&lt;/p&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;generating-the-site&quot;&gt;Generating the Site&lt;/h1&gt;

&lt;hr /&gt;
&lt;p&gt;After you’ve written the post you’ll need to generate the site, and you should see your new post added to the respective category. You’ll need to run a few commands in the terminal to do it&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;uml-embedded.github.io
bundle update
bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That last command will host the site on a local server. The link will appear in the terminal after you enter it. Go ahead and look through the post to make sure it looks how you want, and when you’re satisfied, make a pull request.&lt;/p&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;creating-a-pull-request-for-your-post&quot;&gt;Creating a Pull Request for Your Post&lt;/h1&gt;
&lt;hr /&gt;

&lt;p&gt;All you need to do is fork the repository, create a development branch, make your changes, push to your repo and then go on GitHub and generate a pull request.&lt;/p&gt;

&lt;p&gt;Here’s a good &lt;a href=&quot;https://opensource.com/article/19/7/create-pull-request-github&quot;&gt;guide&lt;/a&gt; on that.&lt;/p&gt;</content><author><name></name></author><category term="tutorials" /><summary type="html">Overview</summary></entry></feed>